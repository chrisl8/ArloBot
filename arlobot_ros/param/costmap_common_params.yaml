# All lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# https://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note that the max_obstacle_height is very important!
max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot

# Obstacle Cost Shaping (https://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.25 # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular

obstacle_layer:
  enabled: true
  max_obstacle_height: 0.6 # Why is this defined twice?
  origin_z: 0.0
  z_resolution: 0.2
  z_voxels: 2
  unknown_threshold: 15
  mark_threshold: 0
  combination_method: 1
  track_unknown_space: true    #true needed for disabling global path planning through unknown space
  obstacle_range: 2.5
  raytrace_range: 3.0
  publish_voxel_map: false
  observation_sources: scan
  scan:
    data_type: LaserScan
    topic: scan
    marking: true
    clearing: true
    min_obstacle_height: 0.25
    max_obstacle_height: 0.45
    # PING and/or IR could be added if we want to be able to avoid obstacles seen by them but not the "lidar"
    # See EXAMPLE-costmap_common_params_multiple_input for example.

#cost_scaling_factor and inflation_radius were now moved to the inflation_layer ns
# See https://kaiyuzheng.me/documents/navguide.pdf for ideas
inflation_layer:
  enabled: true
  cost_scaling_factor: 2.58  # exponential rate at which the obstacle cost drops off (default: 10)
  inflation_radius: 1.75  # max. distance from an obstacle at which costs are incurred for planning paths.

static_layer:
  enabled: true
