# Customized for ArloBot
max_obstacle_height: 0.60  # assume something like an arm is mounted on top of the robot
obstacle_range: 2.5
raytrace_range: 3.0

# Obstacle Cost Shaping (http://wiki.ros.org/costmap_2d/hydro/inflation)
robot_radius: 0.20  # distance a circular robot should be clear of the obstacle (kobuki: 0.18)
#robot_radius: 0.4509 # ArloBot - This makes a mess.
# footprint: [[x0, y0], [x1, y1], ... [xn, yn]]  # if the robot is not circular
inflation_radius: 0.30  # max. distance from an obstacle at which costs are incurred for planning paths.
cost_scaling_factor: 10  # exponential rate at which the obstacle cost drops off (default: 10)

# voxel map configuration; z-voxels 0 are filled by bumpers and 1 by laser scan (kinect)
map_type: voxel
origin_z: 0.0
z_resolution: 0.2
z_voxels: 2
publish_voxel_map: false

#observation_sources: scan bump
observation_sources: scan ultrasonic # Not using IR, though the data is there.

# Our lasers (Xtion and fake) either needs to publish a height, or set min_obstacle_height to 0.0:
# http://wiki.ros.org/navigation/Troubleshooting#Missing_Obstacles_in_Costmap2D
# Note that the max_obstacle_height is very important!
# TurtleBot version:
#scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.35}
# ArloBot version: The Asus Xtion is at about .45 meters high on the Arlobot, so the 0.35 is below the level it reports data causing ROS to ignore the Xtion for obstacle avoidance!
scan: {data_type: LaserScan, topic: scan, marking: true, clearing: true, min_obstacle_height: 0.25, max_obstacle_height: 0.45}
#bump: {data_type: PointCloud2, topic: mobile_base/sensors/bumper_pointcloud, marking: true, clearing: false, min_obstacle_height: 0.0, max_obstacle_height: 0.15}
# I do not THINK that it works to make per source inflation_radius changes:
#ultrasonic: {data_type: LaserScan, topic: ultrasonic_scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 0.15, inflation_radius: 0.01}
ultrasonic: {data_type: LaserScan, topic: ultrasonic_scan, marking: true, clearing: true, min_obstacle_height: 0.0, max_obstacle_height: 0.15}
# This appears to help with exporation immensely by allowing it to create paths to destinations outside of the map:
unknown_threshold: 1 # Default 15
